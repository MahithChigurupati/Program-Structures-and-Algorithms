Basic slist test starts
3.6.0 (v3.6.0:41df79263a11, Dec 23 2016, 08:06:12) [MSC v.1900 64 bit (AMD64)]
------------  test append/prepend/find =================
[1, 2, 3, 4, 5] is stored as 1->2->3->4->5->NULL
size of slist = 5
After prepending [10, 11, 12] s looks like 12->11->10->1->2->3->4->5->NULL
size of slist = 8
Find if there passed
Find if NOT there passed
------------  test delete =================
[1, 2, 3, 4, 5] is stored as 1->2->3->4->5->NULL
Size of s = 5
after removing 1 : 2->3->4->5->NULL
after removing 5 : 2->3->4->NULL
after removing 3 : 2->4->NULL
Cannot Remove 100 as it is not there 2->4->NULL
after removing 2 : 4->NULL
after removing 4 : NULL
s is empty
-----------  Testing delete_front ---------------------
[1, 2, 3, 4, 5] is stored as 1->2->3->4->5->NULL
Size of s = 5
after removing 1 : 2->3->4->5->NULL
after removing 2 : 3->4->5->NULL
after removing 3 : 4->5->NULL
after removing 4 : 5->NULL
after removing 5 : NULL
-----------  Testing delete_last ---------------------
[1, 2, 3, 4, 5] is stored as 1->2->3->4->5->NULL
Size of s = 5
after removing 5 : 1->2->3->4->NULL
after removing 4 : 1->2->3->NULL
after removing 3 : 1->2->NULL
after removing 2 : 1->NULL
after removing 1 : NULL
------------  test reverse Iterative=================
[] is stored as NULL
Size of s = 0
s after reverse NULL
------------  test reverse Iterative=================
[1] is stored as 1->NULL
Size of s = 1
s after reverse 1->NULL
------------  test reverse Iterative=================
[1, 2, 3, 4, 5] is stored as 1->2->3->4->5->NULL
Size of s = 5
s after reverse 5->4->3->2->1->NULL
------------  test reverse Iterative=================
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99] is stored as 0->1->2->3->4->5->6->7->8->9->10->11->12->13->14->15->16->17->18->19->20->21->22->23->24->25->26->27->28->29->30->31->32->33->34->35->36->37->38->39->40->41->42->43->44->45->46->47->48->49->50->51->52->53->54->55->56->57->58->59->60->61->62->63->64->65->66->67->68->69->70->71->72->73->74->75->76->77->78->79->80->81->82->83->84->85->86->87->88->89->90->91->92->93->94->95->96->97->98->99->NULL
Size of s = 100
s after reverse 99->98->97->96->95->94->93->92->91->90->89->88->87->86->85->84->83->82->81->80->79->78->77->76->75->74->73->72->71->70->69->68->67->66->65->64->63->62->61->60->59->58->57->56->55->54->53->52->51->50->49->48->47->46->45->44->43->42->41->40->39->38->37->36->35->34->33->32->31->30->29->28->27->26->25->24->23->22->21->20->19->18->17->16->15->14->13->12->11->10->9->8->7->6->5->4->3->2->1->0->NULL
------------  test recursive reverse =================
[] is stored as NULL
Size of s = 0
s after reverse_recur NULL
------------  test recursive reverse =================
[1] is stored as 1->NULL
Size of s = 1
s after reverse_recur 1->NULL
------------  test recursive reverse =================
[1, 2, 3, 4, 5] is stored as 1->2->3->4->5->NULL
Size of s = 5
s after reverse_recur 5->4->3->2->1->NULL
------------  test recursive reverse =================
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99] is stored as 0->1->2->3->4->5->6->7->8->9->10->11->12->13->14->15->16->17->18->19->20->21->22->23->24->25->26->27->28->29->30->31->32->33->34->35->36->37->38->39->40->41->42->43->44->45->46->47->48->49->50->51->52->53->54->55->56->57->58->59->60->61->62->63->64->65->66->67->68->69->70->71->72->73->74->75->76->77->78->79->80->81->82->83->84->85->86->87->88->89->90->91->92->93->94->95->96->97->98->99->NULL
Size of s = 100
s after reverse_recur 99->98->97->96->95->94->93->92->91->90->89->88->87->86->85->84->83->82->81->80->79->78->77->76->75->74->73->72->71->70->69->68->67->66->65->64->63->62->61->60->59->58->57->56->55->54->53->52->51->50->49->48->47->46->45->44->43->42->41->40->39->38->37->36->35->34->33->32->31->30->29->28->27->26->25->24->23->22->21->20->19->18->17->16->15->14->13->12->11->10->9->8->7->6->5->4->3->2->1->0->NULL
------------  test midpoiint using 2 pointers =================
[] is stored as NULL
size of slist = 0
Mid point of s = 0
------------  test midpoiint using 2 pointers =================
[1] is stored as 1->NULL
size of slist = 1
Mid point of s = 0
------------  test midpoiint using 2 pointers =================
[1, 2] is stored as 1->2->NULL
size of slist = 2
Mid point of s = 2
------------  test midpoiint using 2 pointers =================
[1, 2, 3] is stored as 1->2->3->NULL
size of slist = 3
Mid point of s = 2
------------  test midpoiint using 2 pointers =================
[1, 2, 3, 4] is stored as 1->2->3->4->NULL
size of slist = 4
Mid point of s = 3
------------  test midpoiint using 2 pointers =================
[1, 2, 3, 4, 5] is stored as 1->2->3->4->5->NULL
size of slist = 5
Mid point of s = 3
------------  test midpoiint using 2 pointers =================
[1, 2, 3, 4, 5, 6] is stored as 1->2->3->4->5->6->NULL
size of slist = 6
Mid point of s = 4
------------  test midpoiint using 2 pointers =================
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99] is stored as 0->1->2->3->4->5->6->7->8->9->10->11->12->13->14->15->16->17->18->19->20->21->22->23->24->25->26->27->28->29->30->31->32->33->34->35->36->37->38->39->40->41->42->43->44->45->46->47->48->49->50->51->52->53->54->55->56->57->58->59->60->61->62->63->64->65->66->67->68->69->70->71->72->73->74->75->76->77->78->79->80->81->82->83->84->85->86->87->88->89->90->91->92->93->94->95->96->97->98->99->NULL
size of slist = 100
Mid point of s = 50
Basic slist test Passed. If you don't see this line means, you cannot write Slist
Testing L0002Test Starts
-------------PROBLEM 1 ---------------
a= 342
b= 465
answer must be = 807
Let us see your work
aslist= 2->4->3->NULL The number is 342
bslist= 5->6->4->NULL The number is 465
cslist= 7->0->8->NULL The number is 807
-------------PROBLEM 2 ---------------
a= 0
b= 0
answer must be = 0
Let us see your work
aslist= 0->NULL The number is 0
bslist= 0->NULL The number is 0
cslist= 0->NULL The number is 0
-------------PROBLEM 3 ---------------
a= 9999999
b= 9999
answer must be = 10009998
Let us see your work
aslist= 9->9->9->9->9->9->9->NULL The number is 9999999
bslist= 9->9->9->9->NULL The number is 9999
cslist= 8->9->9->9->0->0->0->1->NULL The number is 10009998
-------------PROBLEM 4 ---------------
a= 3490529510847650949147849619903898133417764638493387843990820577
b= 32769132993266709549961988190834461413177642967992942539798288533
answer must be = 36259662504114360499109837810738359546595407606486330383789109110
Let us see your work
aslist= 7->7->5->0->2->8->0->9->9->3->4->8->7->8->3->3->9->4->8->3->6->4->6->7->7->1->4->3->3->1->8->9->8->3->0->9->9->1->6->9->4->8->7->4->1->9->4->9->0->5->6->7->4->8->0->1->5->9->2->5->0->9->4->3->NULL The number is 3490529510847650949147849619903898133417764638493387843990820577
bslist= 3->3->5->8->8->2->8->9->7->9->3->5->2->4->9->2->9->9->7->6->9->2->4->6->7->7->1->3->1->4->1->6->4->4->3->8->0->9->1->8->8->9->1->6->9->9->4->5->9->0->7->6->6->2->3->9->9->2->3->1->9->6->7->2->3->NULL The number is 32769132993266709549961988190834461413177642967992942539798288533
cslist= 0->1->1->9->0->1->9->8->7->3->8->3->0->3->3->6->8->4->6->0->6->7->0->4->5->9->5->6->4->5->9->5->3->8->3->7->0->1->8->7->3->8->9->0->1->9->9->4->0->6->3->4->1->1->4->0->5->2->6->6->9->5->2->6->3->NULL The number is 36259662504114360499109837810738359546595407606486330383789109110
________________________Testing ON 10000 random bumbers between 1 TO 1000000 ________________________
ALL  10000 random tests passed
If you don't see this line means, you cannot add two numbers :-)
ALL TESTS PASSED
Testing L0002Test ENDS
